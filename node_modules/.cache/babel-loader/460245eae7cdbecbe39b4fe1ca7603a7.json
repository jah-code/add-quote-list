{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\React\\\\multi-page-react\\\\multi-page-react\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment } from 'react';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const [author, setAuthor] = useState('');\n  const [text, setText] = useState('');\n\n  function changeAuthorHandler(event) {\n    setAuthor(event.target.value);\n  }\n\n  function changeTextHandler(event) {\n    setText(event.target.value);\n  }\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    props.onAddQuote({\n      author: author,\n      text: text\n    });\n    setAuthor('');\n    setText('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            value: author,\n            onChange: changeAuthorHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            rows: \"5\",\n            value: text,\n            onChange: changeTextHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteForm, \"xvRVJkh5TwLw3CkYz6lIYO7cjBs=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"sources":["C:/Users/user/Documents/React/multi-page-react/multi-page-react/src/components/quotes/QuoteForm.js"],"names":["useState","Fragment","Card","LoadingSpinner","classes","QuoteForm","props","author","setAuthor","text","setText","changeAuthorHandler","event","target","value","changeTextHandler","submitFormHandler","preventDefault","onAddQuote","form","isLoading","loading","control","actions"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASW,mBAAT,CAA6BC,KAA7B,EAAoC;AAClCJ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD;;AAED,WAASC,iBAAT,CAA2BH,KAA3B,EAAkC;AAChCF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD;;AAED,WAASE,iBAAT,CAA2BJ,KAA3B,EAAkC;AAChCA,IAAAA,KAAK,CAACK,cAAN;AAEAX,IAAAA,KAAK,CAACY,UAAN,CAAiB;AAAEX,MAAAA,MAAM,EAAEA,MAAV;AAAkBE,MAAAA,IAAI,EAAEA;AAAxB,KAAjB;AAEAD,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAM,QAAA,SAAS,EAAEN,OAAO,CAACe,IAAzB;AAA+B,QAAA,QAAQ,EAAEH,iBAAzC;AAAA,mBACGV,KAAK,CAACc,SAAN,iBACC;AAAK,UAAA,SAAS,EAAEhB,OAAO,CAACiB,OAAxB;AAAA,iCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOE;AAAK,UAAA,SAAS,EAAEjB,OAAO,CAACkB,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,QAAtB;AAA+B,YAAA,KAAK,EAAEf,MAAtC;AAA8C,YAAA,QAAQ,EAAEI;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE;AAAK,UAAA,SAAS,EAAEP,OAAO,CAACkB,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAU,YAAA,EAAE,EAAC,MAAb;AAAoB,YAAA,IAAI,EAAC,GAAzB;AAA6B,YAAA,KAAK,EAAEb,IAApC;AAA0C,YAAA,QAAQ,EAAEM;AAApD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAeE;AAAK,UAAA,SAAS,EAAEX,OAAO,CAACmB,OAAxB;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA9CD;;GAAMlB,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import { useState, Fragment } from 'react';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [author, setAuthor] = useState('');\n  const [text, setText] = useState('');\n\n  function changeAuthorHandler(event) {\n    setAuthor(event.target.value);\n  }\n\n  function changeTextHandler(event) {\n    setText(event.target.value);\n  }\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    props.onAddQuote({ author: author, text: text });\n\n    setAuthor('');\n    setText('');\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <form className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' value={author} onChange={changeAuthorHandler} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' value={text} onChange={changeTextHandler}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}