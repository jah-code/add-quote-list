{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\React\\\\multi-page-react\\\\multi-page-react\\\\src\\\\components\\\\pages\\\\NewQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport QuoteForm from \"../quotes/QuoteForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addQuote } from \"../../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewQuote = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status\n  } = useHttp(addQuote);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (status === \"completed\") {\n      navigate(\"/quotes\");\n    }\n  }, [status, navigate]);\n\n  const newQuoteHandler = quoteData => {\n    sendRequest(quoteData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuoteForm, {\n      isLoading: status === 'pending',\n      onAddQuote: newQuoteHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewQuote, \"fxAdbl4uPaLn6MvCvwwJJOX5RDo=\", false, function () {\n  return [useHttp, useNavigate];\n});\n\n_c = NewQuote;\nexport default NewQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuote\");","map":{"version":3,"sources":["C:/Users/user/Documents/React/multi-page-react/multi-page-react/src/components/pages/NewQuote.js"],"names":["React","Fragment","useEffect","useNavigate","QuoteForm","useHttp","addQuote","NewQuote","sendRequest","status","navigate","newQuoteHandler","quoteData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAyB,eAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA0BJ,OAAO,CAACC,QAAD,CAAvC;AAEA,QAAMI,QAAQ,GAAGP,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,MAAM,KAAK,WAAf,EAA4B;AAC1BC,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACD,MAAD,EAASC,QAAT,CAJM,CAAT;;AAMA,QAAMC,eAAe,GAAIC,SAAD,IAAe;AACrCJ,IAAAA,WAAW,CAACI,SAAD,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEH,MAAM,KAAK,SAAjC;AAA4C,MAAA,UAAU,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApBD;;GAAMJ,Q;UAC4BF,O,EAEfF,W;;;KAHbI,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport QuoteForm from \"../quotes/QuoteForm\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { addQuote } from \"../../lib/api\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      navigate(\"/quotes\");\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const newQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <QuoteForm isLoading={status === 'pending'} onAddQuote={newQuoteHandler} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"]},"metadata":{},"sourceType":"module"}