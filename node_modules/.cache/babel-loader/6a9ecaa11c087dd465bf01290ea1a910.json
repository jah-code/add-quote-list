{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\React\\\\multi-page-react\\\\multi-page-react\\\\src\\\\components\\\\pages\\\\AllQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport QuoteList from \"../quotes/QuoteList\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllQuotes } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport NoQuotesFound from \"../../components/quotes/NoQuotesFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuote = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: loadedQuotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllQuote, \"xmzqdF0SAq1bnsS9hD1yci6YQlY=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuote;\nexport default AllQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuote\");","map":{"version":3,"sources":["C:/Users/user/Documents/React/multi-page-react/multi-page-react/src/components/pages/AllQuote.js"],"names":["React","Fragment","useEffect","QuoteList","useHttp","getAllQuotes","LoadingSpinner","NoQuotesFound","AllQuote","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,aAAP,MAA0B,uCAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,YAHF;AAIJC,IAAAA;AAJI,MAKFT,OAAO,CAACC,YAAD,EAAe,IAAf,CALX;AAOAH,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MACEH,MAAM,KAAK,WAAX,KACC,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAD1C,CADF,EAGE;AACA,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApCD;;GAAMJ,Q;UAMAJ,O;;;KANAI,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport QuoteList from \"../quotes/QuoteList\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { getAllQuotes } from \"../../lib/api\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../../components/quotes/NoQuotesFound\";\r\n\r\nconst AllQuote = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (\r\n    status === \"completed\" &&\r\n    (!loadedQuotes || loadedQuotes.length === 0)\r\n  ) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <QuoteList quotes={loadedQuotes} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AllQuote;\r\n"]},"metadata":{},"sourceType":"module"}